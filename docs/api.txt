/account: [GET] return current user's personal information

/account/login: [POST]
    param: [email, password]
    return: "ACCOUNT_LOGIN_SUCCESS" / "ACCOUNT_LOGIN_INVALID"

/account/register: [POST]
    param: [user_id, email, password, name, address, phone, is_expert, (experience), (is_verified)]
    return: "ACCOUNT_REGISTER_SUCCESS" / "ACCOUNT_REGISTER_EXIST"

/account/logout: [GET]

--------------------------------

/socmed: [GET] return current user's social media usernames

/socmed/add: [POST] add social media usernames to user's document
    param: [user_id, (twitter), (facebook), (instagram)]
    return: "SOCMED_ADD_SUCCESS"

/socmed/remove: [POST] remove social media usernames from user's document
    param: [user_id, (twitter), (facebook), (instagram)]
    return: "SOCMED_REMOVE_SUCCESS" / "SOCMED_REMOVE_UNEXIST"

--------------------------------

/userdata: [GET] return current user's data
    param: [data_type]

/userdata/add: [POST] add user's data
    param: [user_id, data_type, data, timestamp]
    return: "USERDATA_ADD_SUCCESS"

--------------------------------

/chat: [GET] return current user's chat with sender_id
    param: [sender_id]

/chat/send: [POST] send chat between sender and receiver
    param: [receiver_id, message]
    return: "CHAT_SEND_SUCCESS"

--------------------------------

/trainingdata: [GET] return training data

/trainingdata/add: [POST] add a training datum to training data
    param: [label, symptom_1, symptom_2, ..., symptoms_9]
    return: "TRAININGDATA_ADD_SUCCESS"

--------------------------------

/appointment: [GET] return current user's appointments

/appointment/add: [POST] add an appointment
    param: [patient_id, expert_id, timestamp, location, issue_description, status]
    return: "APPOINTMENT_ADD_SUCCESS"

--------------------------------

/monitoring: [GET] return current user's monitoring

/monitoring/add: [POST] add a monitoring
    param: [user_id, [symptom_numbers], timestamp]
    return: "MONITORING_ADD_SUCCESS"
